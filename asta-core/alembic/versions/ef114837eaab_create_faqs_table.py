"""create_faqs_table

Revision ID: ef114837eaab
Revises: 
Create Date: 2025-09-08 01:46:32.973003

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ef114837eaab'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('IDX_1e31657f5fe46816c34be7c1b4', table_name='workflow_history')
    op.drop_table('workflow_history')
    op.drop_table('auth_provider_sync_history')
    op.drop_index('IDX_8e4b4774db42f1e6dda3452b2a', table_name='test_case_execution')
    op.drop_table('test_case_execution')
    op.drop_table('user')
    op.drop_table('data_store_column')
    op.drop_index('idx_812eb05f7451ca757fb98444ce', table_name='tag_entity')
    op.drop_index('pk_tag_entity_id', table_name='tag_entity')
    op.drop_table('tag_entity')
    op.drop_table('processed_data')
    op.drop_index('IDX_execution_entity_deletedAt', table_name='execution_entity')
    op.drop_index('idx_execution_entity_stopped_at_status_deleted_at', table_name='execution_entity', postgresql_where='(("stoppedAt" IS NOT NULL) AND ("deletedAt" IS NULL))')
    op.drop_index('idx_execution_entity_wait_till_status_deleted_at', table_name='execution_entity', postgresql_where='(("waitTill" IS NOT NULL) AND ("deletedAt" IS NULL))')
    op.drop_index('idx_execution_entity_workflow_id_started_at', table_name='execution_entity', postgresql_where='(("startedAt" IS NOT NULL) AND ("deletedAt" IS NULL))')
    op.drop_table('execution_entity')
    op.drop_index('IDX_a3697779b366e131b2bbdae297', table_name='execution_annotation_tags')
    op.drop_index('IDX_c1519757391996eb06064f0e7c', table_name='execution_annotation_tags')
    op.drop_table('execution_annotation_tags')
    op.drop_table('execution_data')
    op.drop_table('shared_credentials')
    op.drop_table('auth_identity')
    op.drop_table('event_destinations')
    op.drop_table('installed_packages')
    op.drop_index('pk_variables_id', table_name='variables')
    op.drop_table('variables')
    op.drop_index('idx_07fde106c0b471d8cc80a64fc8', table_name='credentials_entity')
    op.drop_index('pk_credentials_entity_id', table_name='credentials_entity')
    op.drop_table('credentials_entity')
    op.drop_table('workflow_statistics')
    op.drop_index('IDX_97f863fa83c4786f1956508496', table_name='execution_annotations')
    op.drop_table('execution_annotations')
    op.drop_index('IDX_1d8ab99d5861c9388d2dc1cf73', table_name='insights_metadata')
    op.drop_table('insights_metadata')
    op.drop_index('IDX_1ef35bac35d20bdae979d917a3', table_name='user_api_keys')
    op.drop_index('IDX_63d7bbae72c767cf162d459fcc', table_name='user_api_keys')
    op.drop_table('user_api_keys')
    op.drop_index('IDX_14f68deffaf858465715995508', table_name='folder')
    op.drop_table('folder')
    op.drop_table('shared_workflow')
    op.drop_index('IDX_5f0643f6717905a05164090dde', table_name='project_relation')
    op.drop_index('IDX_61448d56d61802b5dfde5cdb00', table_name='project_relation')
    op.drop_table('project_relation')
    op.drop_index('IDX_cec8eea3bf49551482ccb4933e', table_name='execution_metadata')
    op.drop_table('execution_metadata')
    op.drop_index('IDX_60b6a84299eeb3f671dfec7693', table_name='insights_by_period')
    op.drop_table('insights_by_period')
    op.drop_index('idx_tasks_user_id', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index('IDX_d6870d3b6e4c185d33926f423c', table_name='test_run')
    op.drop_table('test_run')
    op.drop_index('IDX_workflow_entity_name', table_name='workflow_entity')
    op.drop_index('pk_workflow_entity_id', table_name='workflow_entity')
    op.drop_table('workflow_entity')
    op.drop_table('insights_raw')
    op.drop_table('role')
    op.drop_table('settings')
    op.drop_table('migrations')
    op.drop_table('users')
    op.drop_table('installed_nodes')
    op.drop_index('IDX_ae51b54c4bb430cf92f48b623f', table_name='annotation_tag_entity')
    op.drop_table('annotation_tag_entity')
    op.drop_table('invalid_auth_token')
    op.drop_table('scope')
    op.drop_index('IDX_role_scope_scopeSlug', table_name='role_scope')
    op.drop_table('role_scope')
    op.drop_index('idx_16f4436789e804e3e1c9eeb240', table_name='webhook_entity')
    op.drop_table('webhook_entity')
    op.drop_index('idx_workflows_tags_workflow_id', table_name='workflows_tags')
    op.drop_table('workflows_tags')
    op.drop_table('folder_tag')
    op.drop_table('project')
    op.drop_table('data_store')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_store',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('projectId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('sizeBytes', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['projectId'], ['project.id'], name='FK_74fdb2d31889a91da14bb711b35', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_61b58bd1a704026d686b73754a6'),
    sa.UniqueConstraint('projectId', 'name', name='UQ_154eca2aa6150c70bd476c6fb72'),
    postgresql_ignore_search_path=False
    )
    op.create_table('project',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('icon', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='PK_4d68b1358bb5b766d3e78f32f57'),
    postgresql_ignore_search_path=False
    )
    op.create_table('folder_tag',
    sa.Column('folderId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('tagId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['folderId'], ['folder.id'], name='FK_94a60854e06f2897b2e0d39edba', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tagId'], ['tag_entity.id'], name='FK_dc88164176283de80af47621746', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('folderId', 'tagId', name='PK_27e4e00852f6b06a925a4d83a3e')
    )
    op.create_table('workflows_tags',
    sa.Column('workflowId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('tagId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['tagId'], ['tag_entity.id'], name='fk_workflows_tags_tag_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workflowId'], ['workflow_entity.id'], name='fk_workflows_tags_workflow_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('workflowId', 'tagId', name='pk_workflows_tags')
    )
    op.create_index('idx_workflows_tags_workflow_id', 'workflows_tags', ['workflowId'], unique=False)
    op.create_table('webhook_entity',
    sa.Column('webhookPath', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('method', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('node', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('webhookId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pathLength', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflowId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['workflowId'], ['workflow_entity.id'], name='fk_webhook_entity_workflow_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('webhookPath', 'method', name='PK_b21ace2e13596ccd87dc9bf4ea6')
    )
    op.create_index('idx_16f4436789e804e3e1c9eeb240', 'webhook_entity', ['webhookId', 'method', 'pathLength'], unique=False)
    op.create_table('role_scope',
    sa.Column('roleSlug', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('scopeSlug', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['roleSlug'], ['role.slug'], name='FK_role', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scopeSlug'], ['scope.slug'], name='FK_scope', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('roleSlug', 'scopeSlug', name='PK_role_scope')
    )
    op.create_index('IDX_role_scope_scopeSlug', 'role_scope', ['scopeSlug'], unique=False)
    op.create_table('scope',
    sa.Column('slug', sa.VARCHAR(length=128), autoincrement=False, nullable=False, comment='Unique identifier of the scope for example: "project:create"'),
    sa.Column('displayName', sa.TEXT(), autoincrement=False, nullable=True, comment='Name used to display in the UI'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='Text describing the scope in more detail of users'),
    sa.PrimaryKeyConstraint('slug', name='PK_bfc45df0481abd7f355d6187da1')
    )
    op.create_table('invalid_auth_token',
    sa.Column('token', sa.VARCHAR(length=512), autoincrement=False, nullable=False),
    sa.Column('expiresAt', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('token', name='PK_5779069b7235b256d91f7af1a15')
    )
    op.create_table('annotation_tag_entity',
    sa.Column('id', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='PK_69dfa041592c30bbc0d4b84aa00'),
    postgresql_ignore_search_path=False
    )
    op.create_index('IDX_ae51b54c4bb430cf92f48b623f', 'annotation_tag_entity', ['name'], unique=False)
    op.create_table('installed_nodes',
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('latestVersion', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('package', sa.VARCHAR(length=241), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['package'], ['installed_packages.packageName'], name='FK_73f857fc5dce682cef8a99c11dbddbc969618951', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('name', name='PK_8ebd28194e4f792f96b5933423fc439df97d9689')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('company_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('migrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='PK_8c82d7f526340ab734260ea46be')
    )
    op.create_table('settings',
    sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('loadOnStartup', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('key', name='PK_dc0fe14e6d9943f268e7b119f69ab8bd')
    )
    op.create_table('role',
    sa.Column('slug', sa.VARCHAR(length=128), autoincrement=False, nullable=False, comment='Unique identifier of the role for example: "global:owner"'),
    sa.Column('displayName', sa.TEXT(), autoincrement=False, nullable=True, comment='Name used to display in the UI'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='Text describing the scope in more detail of users'),
    sa.Column('roleType', sa.TEXT(), autoincrement=False, nullable=True, comment='Type of the role, e.g., global, project, or workflow'),
    sa.Column('systemRole', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False, comment='Indicates if the role is managed by the system and cannot be edited'),
    sa.PrimaryKeyConstraint('slug', name='PK_35c9b140caaf6da09cfabb0d675'),
    postgresql_ignore_search_path=False
    )
    op.create_table('insights_raw',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('metaId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=False, comment='0: time_saved_minutes, 1: runtime_milliseconds, 2: success, 3: failure'),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True, precision=0), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['metaId'], ['insights_metadata.metaId'], name='FK_6e2e33741adef2a7c5d66befa4e', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_ec15125755151e3a7e00e00014f')
    )
    op.create_table('workflow_entity',
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('nodes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('connections', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('settings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('staticData', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('pinData', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('versionId', sa.CHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('triggerCount', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('parentFolderId', sa.VARCHAR(length=36), server_default=sa.text('NULL::character varying'), autoincrement=False, nullable=True),
    sa.Column('isArchived', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['parentFolderId'], ['folder.id'], name='fk_workflow_parent_folder', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='workflow_entity_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('pk_workflow_entity_id', 'workflow_entity', ['id'], unique=False)
    op.create_index('IDX_workflow_entity_name', 'workflow_entity', ['name'], unique=False)
    op.create_table('test_run',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('workflowId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('errorCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('errorDetails', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('runAt', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=True),
    sa.Column('completedAt', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=True),
    sa.Column('metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['workflowId'], ['workflow_entity.id'], name='FK_d6870d3b6e4c185d33926f423c8', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_011c050f566e9db509a0fadb9b9'),
    postgresql_ignore_search_path=False
    )
    op.create_index('IDX_d6870d3b6e4c185d33926f423c', 'test_run', ['workflowId'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=True),
    sa.Column('is_important', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tasks_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tasks_pkey')
    )
    op.create_index('idx_tasks_user_id', 'tasks', ['user_id'], unique=False)
    op.create_table('insights_by_period',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('metaId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=False, comment='0: time_saved_minutes, 1: runtime_milliseconds, 2: success, 3: failure'),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('periodUnit', sa.INTEGER(), autoincrement=False, nullable=False, comment='0: hour, 1: day, 2: week'),
    sa.Column('periodStart', postgresql.TIMESTAMP(timezone=True, precision=0), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['metaId'], ['insights_metadata.metaId'], name='FK_6414cfed98daabbfdd61a1cfbc0', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_b606942249b90cc39b0265f0575')
    )
    op.create_index('IDX_60b6a84299eeb3f671dfec7693', 'insights_by_period', ['periodStart', 'type', 'periodUnit', 'metaId'], unique=False)
    op.create_table('execution_metadata',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('executionId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['executionId'], ['execution_entity.id'], name='FK_31d0b4c93fb85ced26f6005cda3', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_17a0b6284f8d626aae88e1c16e4')
    )
    op.create_index('IDX_cec8eea3bf49551482ccb4933e', 'execution_metadata', ['executionId', 'key'], unique=False)
    op.create_table('project_relation',
    sa.Column('projectId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('userId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['projectId'], ['project.id'], name='FK_61448d56d61802b5dfde5cdb002', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], name='FK_5f0643f6717905a05164090dde7', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('projectId', 'userId', name='PK_1caaa312a5d7184a003be0f0cb6')
    )
    op.create_index('IDX_61448d56d61802b5dfde5cdb00', 'project_relation', ['projectId'], unique=False)
    op.create_index('IDX_5f0643f6717905a05164090dde', 'project_relation', ['userId'], unique=False)
    op.create_table('shared_workflow',
    sa.Column('workflowId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('projectId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('role', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['projectId'], ['project.id'], name='FK_a45ea5f27bcfdc21af9b4188560', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workflowId'], ['workflow_entity.id'], name='FK_daa206a04983d47d0a9c34649ce', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('workflowId', 'projectId', name='PK_5ba87620386b847201c9531c58f')
    )
    op.create_table('folder',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('parentFolderId', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('projectId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['parentFolderId'], ['folder.id'], name='FK_804ea52f6729e3940498bd54d78', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['projectId'], ['project.id'], name='FK_a8260b0b36939c6247f385b8221', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_6278a41a706740c94c02e288df8'),
    postgresql_ignore_search_path=False
    )
    op.create_index('IDX_14f68deffaf858465715995508', 'folder', ['projectId', 'id'], unique=False)
    op.create_table('user_api_keys',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('userId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('apiKey', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('scopes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], name='FK_e131705cbbc8fb589889b02d457', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_978fa5caa3468f463dac9d92e69')
    )
    op.create_index('IDX_63d7bbae72c767cf162d459fcc', 'user_api_keys', ['userId', 'label'], unique=False)
    op.create_index('IDX_1ef35bac35d20bdae979d917a3', 'user_api_keys', ['apiKey'], unique=False)
    op.create_table('insights_metadata',
    sa.Column('metaId', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('workflowId', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('projectId', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('workflowName', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('projectName', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['projectId'], ['project.id'], name='FK_2375a1eda085adb16b24615b69c', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workflowId'], ['workflow_entity.id'], name='FK_1d8ab99d5861c9388d2dc1cf733', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('metaId', name='PK_f448a94c35218b6208ce20cf5a1')
    )
    op.create_index('IDX_1d8ab99d5861c9388d2dc1cf73', 'insights_metadata', ['workflowId'], unique=False)
    op.create_table('execution_annotations',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('execution_annotations_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('executionId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vote', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['executionId'], ['execution_entity.id'], name='FK_97f863fa83c4786f19565084960', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_7afcf93ffa20c4252869a7c6a23'),
    postgresql_ignore_search_path=False
    )
    op.create_index('IDX_97f863fa83c4786f1956508496', 'execution_annotations', ['executionId'], unique=False)
    op.create_table('workflow_statistics',
    sa.Column('count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('latestEvent', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('workflowId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('rootCount', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workflowId'], ['workflow_entity.id'], name='fk_workflow_statistics_workflow_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('workflowId', 'name', name='pk_workflow_statistics')
    )
    op.create_table('credentials_entity',
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('isManaged', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='credentials_entity_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('pk_credentials_entity_id', 'credentials_entity', ['id'], unique=False)
    op.create_index('idx_07fde106c0b471d8cc80a64fc8', 'credentials_entity', ['type'], unique=False)
    op.create_table('variables',
    sa.Column('key', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), server_default=sa.text("'string'::character varying"), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='variables_pkey'),
    sa.UniqueConstraint('key', name='variables_key_key')
    )
    op.create_index('pk_variables_id', 'variables', ['id'], unique=False)
    op.create_table('installed_packages',
    sa.Column('packageName', sa.VARCHAR(length=214), autoincrement=False, nullable=False),
    sa.Column('installedVersion', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('authorName', sa.VARCHAR(length=70), autoincrement=False, nullable=True),
    sa.Column('authorEmail', sa.VARCHAR(length=70), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('packageName', name='PK_08cc9197c39b028c1e9beca225940576fd1a5804')
    )
    op.create_table('event_destinations',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('destination', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='event_destinations_pkey')
    )
    op.create_table('auth_identity',
    sa.Column('userId', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('providerId', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('providerType', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], name='auth_identity_userId_fkey'),
    sa.PrimaryKeyConstraint('providerId', 'providerType', name='auth_identity_pkey')
    )
    op.create_table('shared_credentials',
    sa.Column('credentialsId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('projectId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('role', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['credentialsId'], ['credentials_entity.id'], name='FK_416f66fc846c7c442970c094ccf', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['projectId'], ['project.id'], name='FK_812c2852270da1247756e77f5a4', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('credentialsId', 'projectId', name='PK_8ef3a59796a228913f251779cff')
    )
    op.create_table('execution_data',
    sa.Column('executionId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('workflowData', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['executionId'], ['execution_entity.id'], name='execution_data_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('executionId', name='execution_data_pkey')
    )
    op.create_table('execution_annotation_tags',
    sa.Column('annotationId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tagId', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['annotationId'], ['execution_annotations.id'], name='FK_c1519757391996eb06064f0e7c8', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tagId'], ['annotation_tag_entity.id'], name='FK_a3697779b366e131b2bbdae2976', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('annotationId', 'tagId', name='PK_979ec03d31294cca484be65d11f')
    )
    op.create_index('IDX_c1519757391996eb06064f0e7c', 'execution_annotation_tags', ['annotationId'], unique=False)
    op.create_index('IDX_a3697779b366e131b2bbdae297', 'execution_annotation_tags', ['tagId'], unique=False)
    op.create_table('execution_entity',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('execution_entity_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('finished', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('mode', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('retryOf', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('retrySuccessId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('startedAt', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=True),
    sa.Column('stoppedAt', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=True),
    sa.Column('waitTill', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('workflowId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('deletedAt', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['workflowId'], ['workflow_entity.id'], name='fk_execution_entity_workflow_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='pk_e3e63bbf986767844bbe1166d4e'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_execution_entity_workflow_id_started_at', 'execution_entity', ['workflowId', 'startedAt'], unique=False, postgresql_where='(("startedAt" IS NOT NULL) AND ("deletedAt" IS NULL))')
    op.create_index('idx_execution_entity_wait_till_status_deleted_at', 'execution_entity', ['waitTill', 'status', 'deletedAt'], unique=False, postgresql_where='(("waitTill" IS NOT NULL) AND ("deletedAt" IS NULL))')
    op.create_index('idx_execution_entity_stopped_at_status_deleted_at', 'execution_entity', ['stoppedAt', 'status', 'deletedAt'], unique=False, postgresql_where='(("stoppedAt" IS NOT NULL) AND ("deletedAt" IS NULL))')
    op.create_index('IDX_execution_entity_deletedAt', 'execution_entity', ['deletedAt'], unique=False)
    op.create_table('processed_data',
    sa.Column('workflowId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('context', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['workflowId'], ['workflow_entity.id'], name='FK_06a69a7032c97a763c2c7599464', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('workflowId', 'context', name='PK_ca04b9d8dc72de268fe07a65773')
    )
    op.create_table('tag_entity',
    sa.Column('name', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tag_entity_pkey')
    )
    op.create_index('pk_tag_entity_id', 'tag_entity', ['id'], unique=False)
    op.create_index('idx_812eb05f7451ca757fb98444ce', 'tag_entity', ['name'], unique=False)
    op.create_table('data_store_column',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=32), autoincrement=False, nullable=False, comment='Expected: string, number, boolean, or date (not enforced as a constraint)'),
    sa.Column('index', sa.INTEGER(), autoincrement=False, nullable=False, comment='Column order, starting from 0 (0 = first column)'),
    sa.Column('dataStoreId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['dataStoreId'], ['data_store.id'], name='FK_07172caded772d9c9d1a96d8317', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_7b8f3cd531df59e02f76ac22d58'),
    sa.UniqueConstraint('dataStoreId', 'name', name='UQ_26a8273615fe6292e4ee2c0155f')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), server_default=sa.text("uuid_in((OVERLAY(OVERLAY(md5((((random())::text || ':'::text) || (clock_timestamp())::text)) PLACING '4'::text FROM 13) PLACING to_hex((floor(((random() * (((11 - 8) + 1))::double precision) + (8)::double precision)))::integer) FROM 17))::cstring)"), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('firstName', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('lastName', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('personalizationAnswers', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('settings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('mfaEnabled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('mfaSecret', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mfaRecoveryCodes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('role', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('lastActiveAt', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('roleSlug', sa.VARCHAR(length=128), server_default=sa.text("'global:member'::character varying"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['roleSlug'], ['role.slug'], name='FK_eaea92ee7bfb9c1b6cd01505d56'),
    sa.PrimaryKeyConstraint('id', name='PK_ea8f538c94b6e352418254ed6474a81f'),
    sa.UniqueConstraint('email', name='UQ_e12875dfb3b1d92d7d7c5377e2')
    )
    op.create_table('test_case_execution',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('testRunId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('executionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('runAt', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=True),
    sa.Column('completedAt', postgresql.TIMESTAMP(timezone=True, precision=3), autoincrement=False, nullable=True),
    sa.Column('errorCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('errorDetails', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('inputs', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('outputs', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['executionId'], ['execution_entity.id'], name='FK_e48965fac35d0f5b9e7f51d8c44', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['testRunId'], ['test_run.id'], name='FK_8e4b4774db42f1e6dda3452b2af', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK_90c121f77a78a6580e94b794bce')
    )
    op.create_index('IDX_8e4b4774db42f1e6dda3452b2a', 'test_case_execution', ['testRunId'], unique=False)
    op.create_table('auth_provider_sync_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('providerType', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('runMode', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('startedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('endedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('scanned', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('disabled', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('error', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='auth_provider_sync_history_pkey')
    )
    op.create_table('workflow_history',
    sa.Column('versionId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('workflowId', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('authors', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(timezone=True, precision=3), server_default=sa.text('CURRENT_TIMESTAMP(3)'), autoincrement=False, nullable=False),
    sa.Column('nodes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('connections', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['workflowId'], ['workflow_entity.id'], name='FK_1e31657f5fe46816c34be7c1b4b', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('versionId', name='PK_b6572dd6173e4cd06fe79937b58')
    )
    op.create_index('IDX_1e31657f5fe46816c34be7c1b4', 'workflow_history', ['workflowId'], unique=False)
    # ### end Alembic commands ###
