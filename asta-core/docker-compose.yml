version: '3.8'

# Define a custom network for all services to use
networks:
  atlas-network:
    driver: bridge

services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/db/:/docker-entrypoint-initdb.d/
    expose:
      - "5432"
    networks:
      - atlas-network  # Connect to our custom network

  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped # Ensures n8n restarts if it crashes or the server reboots
    depends_on:
      - db
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=db
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}

      # --- CRITICAL PRODUCTION SETTINGS ---
      - N8N_ENCRYPTION_KEY=1Cp3SAzzhZHpWnkxSXLnrVg8DETYrxoV # Needed for persistence!
      - N8N_GENERIC_TIMEZONE=Africa/Nairobi # Or your timezone
      - N8N_DIAGNOSTICS_ENABLED=false # Reduces telemetry
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true

    volumes:
      - n8n_data:/home/node/.n8n  # This volume will store your workflows, credentials, and state
    networks:
      - atlas-network  # Connect to our custom network
    

  web:
    build: .
    depends_on:
      - db
      - n8n
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - N8N_URL=http://n8n:5678
    networks:
      - atlas-network  # Connect to our custom network

volumes:
  pgdata:
    driver: local
  n8n_data:
    driver: local
